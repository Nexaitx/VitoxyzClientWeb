import{A as Q,B as U,D as W,b as M,d as p,g as P,h as G,i as R,m as H,n as V,o as w,p as L,q as $,r as z,s as j,t as Y,u as J,w as K}from"./chunk-7H6Y33SG.js";import{$b as _,Db as q,Ec as C,Fb as F,Fc as D,Gb as k,Hc as O,Sa as l,Sb as v,Ub as n,Wb as E,Xa as I,cb as T,ea as B,fa as A,gb as d,wb as a,xb as t,yb as e,zb as x}from"./chunk-RMNDDDX3.js";function ee(i,u){i&1&&(t(0,"div",22),n(1," Name is required. "),e())}function te(i,u){i&1&&(t(0,"span"),n(1,"Age is required."),e())}function ie(i,u){i&1&&(t(0,"span"),n(1,"Age must be at least 18."),e())}function ne(i,u){if(i&1&&(t(0,"div",22),d(1,te,2,0,"span",23)(2,ie,2,0,"span",23),e()),i&2){let o,r,m=k();l(),a("ngIf",(o=m.nurseBookingForm.get("userInfo.age"))==null||o.errors==null?null:o.errors.required),l(),a("ngIf",(r=m.nurseBookingForm.get("userInfo.age"))==null||r.errors==null?null:r.errors.min)}}function re(i,u){i&1&&(t(0,"span"),n(1,"Phone number is required."),e())}function le(i,u){i&1&&(t(0,"span"),n(1,"Please enter a valid 10-digit phone number."),e())}function oe(i,u){if(i&1&&(t(0,"div",22),d(1,re,2,0,"span",23)(2,le,2,0,"span",23),e()),i&2){let o,r,m=k();l(),a("ngIf",(o=m.nurseBookingForm.get("userInfo.phoneNumber"))==null||o.errors==null?null:o.errors.required),l(),a("ngIf",(r=m.nurseBookingForm.get("userInfo.phoneNumber"))==null||r.errors==null?null:r.errors.pattern)}}function ae(i,u){i&1&&(t(0,"div",22),n(1," Complete Address is required. "),e())}function ue(i,u){i&1&&(t(0,"div",22),n(1," Type of Nurse is required. "),e())}function me(i,u){i&1&&(t(0,"div",22),n(1," Shift Time is required. "),e())}function se(i,u){i&1&&(t(0,"div",22),n(1," Gender is required. "),e())}function de(i,u){i&1&&(t(0,"span"),n(1,"Number of Nurses is required."),e())}function pe(i,u){i&1&&(t(0,"span"),n(1,"Must be at least 1."),e())}function fe(i,u){if(i&1&&(t(0,"div",22),d(1,de,2,0,"span",23)(2,pe,2,0,"span",23),e()),i&2){let o,r,m=k().$implicit;l(),a("ngIf",(o=m.get("numberOfNurses"))==null||o.errors==null?null:o.errors.required),l(),a("ngIf",(r=m.get("numberOfNurses"))==null||r.errors==null?null:r.errors.min)}}function ce(i,u){i&1&&(t(0,"span"),n(1,"Days required is required."),e())}function _e(i,u){i&1&&(t(0,"span"),n(1,"Must be at least 1 day."),e())}function ve(i,u){if(i&1&&(t(0,"div",22),d(1,ce,2,0,"span",23)(2,_e,2,0,"span",23),e()),i&2){let o,r,m=k().$implicit;l(),a("ngIf",(o=m.get("daysRequired"))==null||o.errors==null?null:o.errors.required),l(),a("ngIf",(r=m.get("daysRequired"))==null||r.errors==null?null:r.errors.min)}}function ge(i,u){if(i&1){let o=q();t(0,"div",49)(1,"button",50),F("click",function(){B(o);let m=k().index,c=k();return A(c.removeNurseDetail(m))}),n(2),e()()}if(i&2){let o=k().index;l(2),E(" Remove Nurse #",o+1," ")}}function Ne(i,u){if(i&1&&(t(0,"div",24)(1,"div",25)(2,"h5",26),n(3),e(),t(4,"div",27)(5,"div",6)(6,"label",28),n(7,"Type of Nurse"),e(),t(8,"select",29)(9,"option",30),n(10,"Select Type"),e(),t(11,"option",31),n(12,"Registered Nurse (RN)"),e(),t(13,"option",32),n(14,"Licensed Practical Nurse (LPN)"),e(),t(15,"option",33),n(16,"Certified Nursing Assistant (CNA)"),e(),t(17,"option",34),n(18,"Home Health Aide (HHA)"),e(),t(19,"option",35),n(20,"Specialized Nurse"),e()(),d(21,ue,2,0,"div",9),e(),t(22,"div",6)(23,"label",28),n(24,"Shift Time"),e(),t(25,"select",36)(26,"option",30),n(27,"Select Shift"),e(),t(28,"option",37),n(29,"Day Shift (8 AM - 4 PM)"),e(),t(30,"option",38),n(31,"Evening Shift (4 PM - 12 AM)"),e(),t(32,"option",39),n(33,"Night Shift (12 AM - 8 AM)"),e(),t(34,"option",40),n(35,"Custom Shift"),e()(),d(36,me,2,0,"div",9),e(),t(37,"div",6)(38,"label",28),n(39,"Gender"),e(),t(40,"select",41)(41,"option",30),n(42,"Select Gender"),e(),t(43,"option",42),n(44,"Male"),e(),t(45,"option",43),n(46,"Female"),e(),t(47,"option",44),n(48,"Any"),e()(),d(49,se,2,0,"div",9),e(),t(50,"div",6)(51,"label",28),n(52,"Number of Nurses"),e(),x(53,"input",45),d(54,fe,3,2,"div",9),e(),t(55,"div",46)(56,"label",28),n(57,"How many days should nurses be required?"),e(),x(58,"input",47),d(59,ve,3,2,"div",9),e()(),d(60,ge,3,1,"div",48),e()()),i&2){let o,r,m,c,g,N,b,y,h,S,s=u.$implicit,f=u.index,Z=k();a("formGroupName",f),l(3),E("Nurse #",f+1),l(3),a("for",_("typeOfNurse-",f)),l(2),v("is-invalid",((o=s.get("typeOfNurse"))==null?null:o.invalid)&&((o=s.get("typeOfNurse"))==null?null:o.touched)),a("id",_("typeOfNurse-",f)),l(13),a("ngIf",((r=s.get("typeOfNurse"))==null?null:r.invalid)&&((r=s.get("typeOfNurse"))==null?null:r.touched)),l(2),a("for",_("shiftTime-",f)),l(2),v("is-invalid",((m=s.get("shiftTime"))==null?null:m.invalid)&&((m=s.get("shiftTime"))==null?null:m.touched)),a("id",_("shiftTime-",f)),l(11),a("ngIf",((c=s.get("shiftTime"))==null?null:c.invalid)&&((c=s.get("shiftTime"))==null?null:c.touched)),l(2),a("for",_("gender-",f)),l(2),v("is-invalid",((g=s.get("gender"))==null?null:g.invalid)&&((g=s.get("gender"))==null?null:g.touched)),a("id",_("gender-",f)),l(9),a("ngIf",((N=s.get("gender"))==null?null:N.invalid)&&((N=s.get("gender"))==null?null:N.touched)),l(2),a("for",_("numberOfNurses-",f)),l(2),v("is-invalid",((b=s.get("numberOfNurses"))==null?null:b.invalid)&&((b=s.get("numberOfNurses"))==null?null:b.touched)),a("id",_("numberOfNurses-",f)),l(),a("ngIf",((y=s.get("numberOfNurses"))==null?null:y.invalid)&&((y=s.get("numberOfNurses"))==null?null:y.touched)),l(2),a("for",_("daysRequired-",f)),l(2),v("is-invalid",((h=s.get("daysRequired"))==null?null:h.invalid)&&((h=s.get("daysRequired"))==null?null:h.touched)),a("id",_("daysRequired-",f)),l(),a("ngIf",((S=s.get("daysRequired"))==null?null:S.invalid)&&((S=s.get("daysRequired"))==null?null:S.touched)),l(),a("ngIf",Z.nurseDetailsFormArray.length>1)}}var X=class i{constructor(u){this.fb=u}center={lat:34.052235,lng:-118.243683};zoom=12;nurseBookingForm;ngOnInit(){this.nurseBookingForm=this.fb.group({userInfo:this.fb.group({name:["",p.required],age:["",[p.required,p.min(18)]],phoneNumber:["",[p.required,p.pattern(/^\d{10}$/)]],completeAddress:["",p.required]}),nurseDetails:this.fb.array([this.createNurseDetailFormGroup()])})}createNurseDetailFormGroup(){return this.fb.group({typeOfNurse:["",p.required],shiftTime:["",p.required],gender:["",p.required],numberOfNurses:["",[p.required,p.min(1)]],daysRequired:["",[p.required,p.min(1)]]})}get nurseDetailsFormArray(){return this.nurseBookingForm.get("nurseDetails")}addNurseDetail(){this.nurseDetailsFormArray.push(this.createNurseDetailFormGroup())}removeNurseDetail(u){this.nurseDetailsFormArray.length>1&&this.nurseDetailsFormArray.removeAt(u)}onSubmit(){this.nurseBookingForm.valid?(console.log("Form Submitted!",this.nurseBookingForm.value),alert("Form submitted successfully! Check console for data.")):(console.log("Form is invalid. Please fill all required fields correctly."),this.markAllAsTouched(this.nurseBookingForm),alert("Please fill all required fields correctly."))}markAllAsTouched(u){Object.values(u.controls).forEach(o=>{o.markAsTouched(),(o instanceof R||o instanceof Q)&&this.markAllAsTouched(o)})}static \u0275fac=function(o){return new(o||i)(I(U))};static \u0275cmp=T({type:i,selectors:[["app-book-nurse"]],decls:38,vars:15,consts:[[1,"container"],[1,"form-container"],[1,"form-title"],[3,"ngSubmit","formGroup"],[1,"section-title","mb-4"],["formGroupName","userInfo",1,"row","g-3","mb-4"],[1,"col-md-6"],["for","name",1,"form-label"],["type","text","id","name","formControlName","name",1,"form-control"],["class","invalid-feedback",4,"ngIf"],["for","age",1,"form-label"],["type","number","id","age","formControlName","age",1,"form-control"],["for","phoneNumber",1,"form-label"],["type","tel","id","phoneNumber","formControlName","phoneNumber",1,"form-control"],["for","completeAddress",1,"form-label"],["type","text","id","completeAddress","formControlName","completeAddress",1,"form-control"],["formArrayName","nurseDetails"],["class","card mb-3",3,"formGroupName",4,"ngFor","ngForOf"],[1,"d-grid","gap-2","mb-4"],["type","button",1,"btn","btn-success",3,"click"],[1,"d-grid"],["type","submit",1,"btn","btn-primary","btn-lg",3,"disabled"],[1,"invalid-feedback"],[4,"ngIf"],[1,"card","mb-3",3,"formGroupName"],[1,"card-body"],[1,"card-title","text-muted","mb-3"],[1,"row","g-3"],[1,"form-label",3,"for"],["formControlName","typeOfNurse",1,"form-select",3,"id"],["value",""],["value","Registered Nurse (RN)"],["value","Licensed Practical Nurse (LPN)"],["value","Certified Nursing Assistant (CNA)"],["value","Home Health Aide (HHA)"],["value","Specialized Nurse"],["formControlName","shiftTime",1,"form-select",3,"id"],["value","Day Shift (8 AM - 4 PM)"],["value","Evening Shift (4 PM - 12 AM)"],["value","Night Shift (12 AM - 8 AM)"],["value","Custom Shift"],["formControlName","gender",1,"form-select",3,"id"],["value","Male"],["value","Female"],["value","Any"],["type","number","formControlName","numberOfNurses","min","1",1,"form-control",3,"id"],[1,"col-md-12"],["type","number","formControlName","daysRequired","min","1",1,"form-control",3,"id"],["class","d-grid mt-3",4,"ngIf"],[1,"d-grid","mt-3"],["type","button",1,"btn","btn-outline-danger","btn-sm",3,"click"]],template:function(o,r){if(o&1&&(t(0,"div",0)(1,"div",1)(2,"h2",2),n(3,"Book a Nurse"),e(),t(4,"form",3),F("ngSubmit",function(){return r.onSubmit()}),t(5,"h4",4),n(6,"Your Information"),e(),t(7,"div",5)(8,"div",6)(9,"label",7),n(10,"Name"),e(),x(11,"input",8),d(12,ee,2,0,"div",9),e(),t(13,"div",6)(14,"label",10),n(15,"Age"),e(),x(16,"input",11),d(17,ne,3,2,"div",9),e(),t(18,"div",6)(19,"label",12),n(20,"Phone Number"),e(),x(21,"input",13),d(22,oe,3,2,"div",9),e(),t(23,"div",6)(24,"label",14),n(25,"Complete Address"),e(),x(26,"input",15),d(27,ae,2,0,"div",9),e()(),t(28,"h4",4),n(29,"Nurse Details"),e(),t(30,"div",16),d(31,Ne,61,38,"div",17),e(),t(32,"div",18)(33,"button",19),F("click",function(){return r.addNurseDetail()}),n(34," Add More Nurse Details "),e()(),t(35,"div",20)(36,"button",21),n(37," Submit Booking "),e()()()()()),o&2){let m,c,g,N,b,y,h,S;l(4),a("formGroup",r.nurseBookingForm),l(7),v("is-invalid",((m=r.nurseBookingForm.get("userInfo.name"))==null?null:m.invalid)&&((m=r.nurseBookingForm.get("userInfo.name"))==null?null:m.touched)),l(),a("ngIf",((c=r.nurseBookingForm.get("userInfo.name"))==null?null:c.invalid)&&((c=r.nurseBookingForm.get("userInfo.name"))==null?null:c.touched)),l(4),v("is-invalid",((g=r.nurseBookingForm.get("userInfo.age"))==null?null:g.invalid)&&((g=r.nurseBookingForm.get("userInfo.age"))==null?null:g.touched)),l(),a("ngIf",((N=r.nurseBookingForm.get("userInfo.age"))==null?null:N.invalid)&&((N=r.nurseBookingForm.get("userInfo.age"))==null?null:N.touched)),l(4),v("is-invalid",((b=r.nurseBookingForm.get("userInfo.phoneNumber"))==null?null:b.invalid)&&((b=r.nurseBookingForm.get("userInfo.phoneNumber"))==null?null:b.touched)),l(),a("ngIf",((y=r.nurseBookingForm.get("userInfo.phoneNumber"))==null?null:y.invalid)&&((y=r.nurseBookingForm.get("userInfo.phoneNumber"))==null?null:y.touched)),l(4),v("is-invalid",((h=r.nurseBookingForm.get("userInfo.completeAddress"))==null?null:h.invalid)&&((h=r.nurseBookingForm.get("userInfo.completeAddress"))==null?null:h.touched)),l(),a("ngIf",((S=r.nurseBookingForm.get("userInfo.completeAddress"))==null?null:S.invalid)&&((S=r.nurseBookingForm.get("userInfo.completeAddress"))==null?null:S.touched)),l(4),a("ngForOf",r.nurseDetailsFormArray.controls),l(5),a("disabled",r.nurseBookingForm.invalid)}},dependencies:[O,C,D,W,H,Y,J,M,V,j,P,G,K,w,z,L,$],encapsulation:2})};export{X as BookNurse};
